{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhmishra/Desktop/react course/textutils/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport Textarea from \"./Components/Textarea\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = cls => {\n    if (mode === \"light\") {\n      document.body.className = 'bg-' + cls;\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(4,5,48)\";\n      showAlert(\"Dark mode has been enbled\", \"success\");\n      document.title = \"Text Utils-Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enbled\", \"success\");\n      document.title = \"Text Utils-Light Mode\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Utils\",\n        aboutText: \"About TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(Textarea, {\n              heading: \"Try - TextUtils Wordcounter,Charactercounter,Remove extra spaces\",\n              mode: mode,\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","About","Navbar","Textarea","BrowserRouter","Router","Switch","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","cls","document","body","className","style","backgroundColor","title"],"sources":["/Users/saurabhmishra/Desktop/react course/textutils/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport Textarea from \"./Components/Textarea\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = (cls) => {\n    if (mode === \"light\") {\n      document.body.className='bg-'+cls;\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(4,5,48)\";\n      showAlert(\"Dark mode has been enbled\", \"success\");\n      document.title = \"Text Utils-Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enbled\", \"success\");\n      document.title = \"Text Utils-Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"Text Utils\"\n          aboutText=\"About TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path= \"/\">\n            <About mode={mode}/>\n            </Route>\n            <Route exact path= \"/about\">\n            <Textarea\n                heading=\"Try - TextUtils Wordcounter,Charactercounter,Remove extra spaces\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n           </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;;AAOA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,OAAD,CAAhC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;;EACA,MAAMc,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CARD;;EASA,MAAMM,UAAU,GAAIC,GAAD,IAAS;IAC1B,IAAIV,IAAI,KAAK,OAAb,EAAsB;MACpBW,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAAwB,QAAMH,GAA9B;MACAT,OAAO,CAAC,MAAD,CAAP;MACAU,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBC,eAApB,GAAsC,aAAtC;MACAX,SAAS,CAAC,2BAAD,EAA8B,SAA9B,CAAT;MACAO,QAAQ,CAACK,KAAT,GAAiB,sBAAjB;IACD,CAND,MAMO;MACLf,OAAO,CAAC,OAAD,CAAP;MACAU,QAAQ,CAACC,IAAT,CAAcE,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAX,SAAS,CAAC,4BAAD,EAA+B,SAA/B,CAAT;MACAO,QAAQ,CAACK,KAAT,GAAiB,uBAAjB;IACD;EACF,CAbD;;EAeA,oBACE;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,MAAD;QACE,KAAK,EAAC,YADR;QAEE,SAAS,EAAC,iBAFZ;QAGE,IAAI,EAAEhB,IAHR;QAIE,UAAU,EAAES;MAJd;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,KAAD;QAAO,KAAK,EAAEP;MAAd;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAE,GAAnB;YAAA,uBACA,QAAC,KAAD;cAAO,IAAI,EAAEF;YAAb;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAE,QAAnB;YAAA,uBACA,QAAC,QAAD;cACI,OAAO,EAAC,kEADZ;cAEI,IAAI,EAAEA,IAFV;cAGI,SAAS,EAAEI;YAHf;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA2BD;;GAtDQL,G;;KAAAA,G;AAuDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}