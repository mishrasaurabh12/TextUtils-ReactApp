{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhmishra/Desktop/react course/textutils/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textarea from './Components/Textarea';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'rgb(4,5,48)';\n      showAlert('Dark mode has been enbled', 'success');\n      document.title = 'Text Utils-Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enbled', 'success');\n      document.title = 'Text Utils-Light Mode';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Utils\",\n      aboutText: \"About TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Textarea, {\n        heading: \"Enter the Text to analyze\",\n        mode: mode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Alert","About","Navbar","Textarea","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["/Users/saurabhmishra/Desktop/react course/textutils/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textarea from './Components/Textarea';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  }\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='rgb(4,5,48)';\n      showAlert('Dark mode has been enbled','success');\n      document.title='Text Utils-Dark Mode';\n\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert('Light mode has been enbled','success');\n      document.title='Text Utils-Light Mode';\n    }\n  }\n\n  return (\n   <>\n   <Navbar title=\"Text Utils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   <div className=\"container my-3\">\n     {/* <About/> */}\n   <Textarea heading=\"Enter the Text to analyze\" mode={mode} showAlert={showAlert}/>\n   </div>\n   </>\n  );\n}\nexport default App;\n"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;;AAOA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAK,CAACC,IAAD,EAAMC,OAAN,IAAeZ,QAAQ,CAAC,OAAD,CAA5B;EACA,MAAK,CAACa,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,IAAD,CAA9B;;EACA,MAAMe,SAAS,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;IAC9BH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CARD;;EASA,MAAMM,UAAU,GAAC,MAAI;IACnB,IAAGT,IAAI,KAAG,OAAV,EACA;MACEC,OAAO,CAAC,MAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,aAApC;MACAT,SAAS,CAAC,2BAAD,EAA6B,SAA7B,CAAT;MACAM,QAAQ,CAACI,KAAT,GAAe,sBAAf;IAED,CAPD,MAQI;MACFb,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;MACAT,SAAS,CAAC,4BAAD,EAA8B,SAA9B,CAAT;MACAM,QAAQ,CAACI,KAAT,GAAe,uBAAf;IACD;EACF,CAfD;;EAiBA,oBACC;IAAA,wBACA,QAAC,MAAD;MAAQ,KAAK,EAAC,YAAd;MAA2B,SAAS,EAAC,iBAArC;MAAuD,IAAI,EAAEd,IAA7D;MAAmE,UAAU,EAAES;IAA/E;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,KAAD;MAAO,KAAK,EAAEP;IAAd;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAK,SAAS,EAAC,gBAAf;MAAA,uBAEA,QAAC,QAAD;QAAU,OAAO,EAAC,2BAAlB;QAA8C,IAAI,EAAEF,IAApD;QAA0D,SAAS,EAAEI;MAArE;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADD;AAUD;;GAvCQL,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}